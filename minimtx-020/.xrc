#!/bin/bash
#******************************************************************************
# Copyright 2019 the original author or authors.                              *
#                                                                             *
# Licensed under the Apache License, Version 2.0 (the "License");             *
# you may not use this file except in compliance with the License.            *
# You may obtain a copy of the License at                                     *
#                                                                             *
# http://www.apache.org/licenses/LICENSE-2.0                                  *
#                                                                             *
# Unless required by applicable law or agreed to in writing, software         *
# distributed under the License is distributed on an "AS IS" BASIS,           *
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    *
# See the License for the specific language governing permissions and         *
# limitations under the License.                                              *
#******************************************************************************/

#==============================================================================
# SCRIPT:       .xrc
# AUTOHR:       Markus Schneider
# CONTRIBUTERS: Markus Schneider,<YOU>
# DATE:         2020-12-04
# REV:          0.2.0
# PLATFORM:     Noarch
# PURPOSE:      Shell environment file for the x_ command space
#==============================================================================

##########################################
##########################################
#####   ---   CONFIGURATION   ---    #####
##########################################
##########################################
export PROJECT_HOME=$(pwd)
export PROJECT_NAME="minimtx-020"

export ORIGIN="schneidermatic"
export ENTITY="centos"
export TAG="centos-8"
export NAME="centos-8"
export IMAGE="$ORIGIN/$ENTITY:$TAG"
export SSH_DIR_PRIMARY=$PROJECT_HOME/resources/ssh-keys
export SSH_DIR_SECONDARY=$PROJECT_HOME/resources/docker/ssh-keys
export IP_ADDRESS=0.0.0.0
export SSH_PASSPHRASE=
USER_NAME=$USER
GROUP_NAME=$(id -gn $USER)

PATH=$PROJECT_HOME/../scripts:$PATH:

IMAGES=("ansible/awx"
        "gitea/gitea"
        "redis"
        "postgres"
        "schneidermatic/awxcli"
        "schneidermatic/centos")

##########################################
##########################################
#####   ---     AWX STACK     ---    #####
##########################################
##########################################

##----------------------------------------
## CREATE SSH-KEYS
##----------------------------------------
x_ssh-keygen() {
   ssh-keygenw.sh
}

##----------------------------------------
## BUILD DOCKER IMAGE
##----------------------------------------
x_build() {
   docker build -t $IMAGE $PROJECT_HOME/.
}

##----------------------------------------
## REMOVE APP DOCKER CONTAINER/IMAGE
##----------------------------------------
x_down() {
  docker-compose down -v
}

##----------------------------------------
## DESTROY THE AWX STACK
##----------------------------------------
x_destroy() {
  docker-compose down -v
  for image in ${IMAGES[@]}; do
    docker rmi --force $(docker images -q "${image}" | uniq) > /dev/null 2>&1
  done
  sudo rm -rf $PROJECT_HOME/resources/awxcompose/pgdocker/*
  sudo rm -rf $PROJECT_HOME/resources/awxcompose/redis_socket/*
  sudo rm -rf $PROJECT_HOME/resources/ssh-keys/*
  sudo rm -rf $PROJECT_HOME/resources/docker/ssh-keys/*
  sudo chmod -R 775 $PROJECT_HOME/resources
  sudo chown -R $USER_NAME:$GROUP_NAME $PROJECT_HOME/resources
}

##----------------------------------------
## SETUP THE AWX STACK
##----------------------------------------
x_setup() {
  sudo chmod -R 775 $PROJECT_HOME/resources
  sudo chown -R $USER_NAME:$GROUP_NAME $PROJECT_HOME/resources
  sudo chmod -R 777 $PROJECT_HOME/resources/awxcompose/redis_socket
  sudo chmod -R 777 $PROJECT_HOME/resources/awxcompose/pgdocker
  sudo chown -R $USER_NAME:$GROUP_NAME $PROJECT_HOME/resources
  ssh-keygenw.sh && docker-compose up
}

##----------------------------------------
## STOP ALL CONTAINERS
##----------------------------------------
x_stop() {
  docker-compose stop
}

##----------------------------------------
## START ALL CONTAINERS
##----------------------------------------
x_start() {
  docker-compose start
}

##----------------------------------------
## RESTART ALL CONTAINERS
##----------------------------------------
x_restart() {
  x_stop
  x_start
}

##----------------------------------------
## CLEAR KNOWN HOSTS
##----------------------------------------
x_rmkh() {
  > $HOME/.ssh/known_hosts
}

##----------------------------------------
## SSH LOGIN 'tools' CONTAINER
##----------------------------------------
x_tools() {
  ssh -i $SSH_DIR_PRIMARY/id_rsa -p 2221 sysadm@${IP_ADDRESS}
}

##----------------------------------------
## SSH LOGIN 'server1' CONTAINER
##----------------------------------------
x_server1() {
  ssh -i $SSH_DIR_PRIMARY/id_rsa -p 2222 sysadm@${IP_ADDRESS}
}

##########################################
##########################################
#####   ---   ALL COMMANDS    ---    #####
##########################################
##########################################

##----------------------------------------
## LIST ALL COMMANDS
##----------------------------------------
x_cmd() {
  declare -F | grep "x_" | sed -E 's/declare -f //'
}
